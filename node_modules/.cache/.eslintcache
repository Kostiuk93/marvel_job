[{"C:\\Users\\PC\\my-app\\src\\index.js":"1","C:\\Users\\PC\\my-app\\src\\components\\app\\App.js":"2","C:\\Users\\PC\\my-app\\src\\components\\appHeader\\AppHeader.js":"3","C:\\Users\\PC\\my-app\\src\\components\\randomChar\\RandomChar.js":"4","C:\\Users\\PC\\my-app\\src\\components\\charList\\CharList.js":"5","C:\\Users\\PC\\my-app\\src\\components\\charInfo\\CharInfo.js":"6","C:\\Users\\PC\\my-app\\src\\components\\skeleton\\Skeleton.js":"7","C:\\Users\\PC\\my-app\\src\\services\\MarvelService.js":"8","C:\\Users\\PC\\my-app\\src\\components\\errorMessage\\ErrorMessage.js":"9","C:\\Users\\PC\\my-app\\src\\components\\comicsList\\ComicsList.js":"10","C:\\Users\\PC\\my-app\\src\\components\\spinner\\Spinner,.js":"11","C:\\Users\\PC\\my-app\\src\\components\\errorBoundary\\ErrorBoundary.js":"12","C:\\Users\\PC\\my-app\\src\\hooks\\http.hook.js":"13","C:\\Users\\PC\\my-app\\src\\components\\appBanner\\AppBanner.js":"14","C:\\Users\\PC\\my-app\\src\\components\\pages\\MainPage.js":"15","C:\\Users\\PC\\my-app\\src\\components\\pages\\ComicsPage.js":"16","C:\\Users\\PC\\my-app\\src\\components\\pages\\index.js":"17","C:\\Users\\PC\\my-app\\src\\components\\pages\\404.js":"18","C:\\Users\\PC\\my-app\\src\\components\\forms\\Form.js":"19","C:\\Users\\PC\\my-app\\src\\components\\charSearchForm\\CharSearchForm.js":"20","C:\\Users\\PC\\my-app\\src\\components\\pages\\singleComicLayout\\SingleComicLayout.js":"21","C:\\Users\\PC\\my-app\\src\\components\\pages\\singleCharacterLayout\\SingleCharacterLayout.js":"22","C:\\Users\\PC\\my-app\\src\\components\\pages\\SinglePage.js":"23"},{"size":232,"mtime":1672769621561,"results":"24","hashOfConfig":"25"},{"size":1980,"mtime":1672782979950,"results":"26","hashOfConfig":"25"},{"size":779,"mtime":1672090136051,"results":"27","hashOfConfig":"25"},{"size":2813,"mtime":1671902183048,"results":"28","hashOfConfig":"25"},{"size":4936,"mtime":1672248385431,"results":"29","hashOfConfig":"25"},{"size":3020,"mtime":1671902304785,"results":"30","hashOfConfig":"25"},{"size":666,"mtime":1629627051000,"results":"31","hashOfConfig":"25"},{"size":2773,"mtime":1672773627649,"results":"32","hashOfConfig":"25"},{"size":262,"mtime":1671215442980,"results":"33","hashOfConfig":"25"},{"size":3244,"mtime":1672087418536,"results":"34","hashOfConfig":"25"},{"size":4615,"mtime":1671213733738,"results":"35","hashOfConfig":"25"},{"size":511,"mtime":1671899525769,"results":"36","hashOfConfig":"25"},{"size":934,"mtime":1671900228167,"results":"37","hashOfConfig":"25"},{"size":522,"mtime":1629627299000,"results":"38","hashOfConfig":"25"},{"size":1545,"mtime":1672816372396,"results":"39","hashOfConfig":"25"},{"size":535,"mtime":1672816538842,"results":"40","hashOfConfig":"25"},{"size":214,"mtime":1672087013569,"results":"41","hashOfConfig":"25"},{"size":798,"mtime":1672817166388,"results":"42","hashOfConfig":"25"},{"size":14187,"mtime":1672768955475,"results":"43","hashOfConfig":"25"},{"size":2892,"mtime":1672769795019,"results":"44","hashOfConfig":"25"},{"size":1164,"mtime":1672816772771,"results":"45","hashOfConfig":"25"},{"size":814,"mtime":1672817064397,"results":"46","hashOfConfig":"25"},{"size":1802,"mtime":1672817215713,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"9gljos",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PC\\my-app\\src\\index.js",[],[],[],"C:\\Users\\PC\\my-app\\src\\components\\app\\App.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\appHeader\\AppHeader.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\randomChar\\RandomChar.js",["122"],[],"import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner,';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, []);\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    };\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null;\n        \n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}  \n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default RandomChar;","C:\\Users\\PC\\my-app\\src\\components\\charList\\CharList.js",["123"],[],"import { useState, useEffect, useRef } from 'react';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner,';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 9);\n        setCharEnded(ended);\n    }\n\n    // Фокус активности выбора\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n              <CSSTransition\n                key={item.id} \n                timeout={500} \n                classNames=\"char__item\">\n                  <li \n                        className=\"char__item\"\n                        tabIndex={0}\n                        ref={el => itemRefs.current[i] = el}\n                        key={item.id}\n                        onClick={() => {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === ' ' || e.key === \"Enter\") {\n                                props.onCharSelected(item.id);\n                                focusOnItem(i);\n                            }\n                        }}> \n                            <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                            <div className=\"char__name\">{item.name}</div>\n                    </li>\n              </CSSTransition>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <TransitionGroup className=\"char__grid\">\n                {items}\n            </TransitionGroup>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propsTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\n\nexport default CharList;","C:\\Users\\PC\\my-app\\src\\components\\charInfo\\CharInfo.js",["124"],["125"],"import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner,';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null);\n    const {loading, error, clearError, getCharacter} = useMarvelService();\n    \n    useEffect(() => {\n        updateChar();\n    }, [props.charId]);\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n        \n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    };\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View  = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","C:\\Users\\PC\\my-app\\src\\components\\skeleton\\Skeleton.js",[],[],"C:\\Users\\PC\\my-app\\src\\services\\MarvelService.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\errorMessage\\ErrorMessage.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\comicsList\\ComicsList.js",["126","127"],[],"import { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../spinner/Spinner,';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        console.log('useEffect');\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            console.log('onRequest');\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        console.log('function Render');\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"comics__item\"\n                    key={i}\n                    > \n                        <Link to={`/comics/${item.id}`}>\n                            <img src={item.thumbnail} alt={item.title} style={imgStyle} className=\"comics__item-img\"/>\n                            <div className=\"comics__item\">{item.title}</div>\n                            <div className=\"comics__item-price\">{item.price}</div>\n                        </Link>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","C:\\Users\\PC\\my-app\\src\\components\\spinner\\Spinner,.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\errorBoundary\\ErrorBoundary.js",[],[],"C:\\Users\\PC\\my-app\\src\\hooks\\http.hook.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\appBanner\\AppBanner.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\pages\\MainPage.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\pages\\ComicsPage.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\pages\\index.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\pages\\404.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\forms\\Form.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\charSearchForm\\CharSearchForm.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\pages\\singleComicLayout\\SingleComicLayout.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\pages\\singleCharacterLayout\\SingleCharacterLayout.js",[],[],"C:\\Users\\PC\\my-app\\src\\components\\pages\\SinglePage.js",["128","129"],[],{"ruleId":"130","severity":1,"message":"131","line":15,"column":8,"nodeType":"132","endLine":15,"endColumn":10,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":21,"column":8,"nodeType":"132","endLine":21,"endColumn":10,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"131","line":16,"column":8,"nodeType":"132","endLine":16,"endColumn":22,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":79,"column":36,"nodeType":"139","messageId":"140","endLine":79,"endColumn":43,"suppressions":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":31,"nodeType":"144","messageId":"145","endLine":1,"endColumn":37},{"ruleId":"130","severity":1,"message":"134","line":21,"column":8,"nodeType":"132","endLine":21,"endColumn":10,"suggestions":"146"},{"ruleId":"130","severity":1,"message":"147","line":20,"column":12,"nodeType":"132","endLine":20,"endColumn":16,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":25,"column":13,"nodeType":"151","messageId":"152","endLine":31,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.",["154"],["155"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["156"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar",["157"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["158"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"kind":"165","justification":"166"},{"desc":"161","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [updateChar]",{"range":"170","text":"171"},"Update the dependencies array to be: [offset, onRequest]",{"range":"172","text":"173"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"174","text":"175"},"directive","",{"range":"176","text":"173"},"Update the dependencies array to be: [id, updateData]",{"range":"177","text":"178"},[487,489],"[updateChar]",[728,730],"[offset, onRequest]",[520,534],"[props.charId, updateChar]",[697,699],[808,812],"[id, updateData]"]