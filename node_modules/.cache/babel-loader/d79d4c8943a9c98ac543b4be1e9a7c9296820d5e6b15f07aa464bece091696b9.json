{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\my-app\\\\src\\\\components\\\\charSearchForm\\\\CharSearchForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charSearchForm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharSearchForm = () => {\n  _s();\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacterByName,\n    clearError\n  } = useMarvelService();\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n  const updateChar = name => {\n    clearError();\n    getCharacterByName(name).then(onCharLoaded);\n  };\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-critical-error\",\n    children: /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 79\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 34\n  }, this) : null;\n  const results = !char ? null : char.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__search-success\",\n      children: [\"There is! Visit \", char[0].name, \" page?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/characters/${char[0].id}`,\n      className: \"button button__secondary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"To page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-error\",\n    children: \"The character was not found. Check the name and try again\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__search-form\",\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        charName: ''\n      },\n      validationSchema: Yup.object({\n        charName: Yup.string().required('This field is required')\n      }),\n      onSubmit: _ref => {\n        let {\n          charName\n        } = _ref;\n        updateChar(charName);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"char__search-label\",\n          htmlFor: \"charName\",\n          children: \"Or find a character by name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__search-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            id: \"charName\",\n            name: \"charName\",\n            type: \"text\",\n            placeholder: \"Enter name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button button__main\",\n            disabled: loading,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"find\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormikErrorMessage, {\n          component: \"div\",\n          className: \"char__search-error\",\n          name: \"charName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), results, errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(CharSearchForm, \"rKKI6EzBaq1Mrm5UuOXddeQEnlY=\", false, function () {\n  return [useMarvelService];\n});\n_c = CharSearchForm;\nexport default CharSearchForm;\nvar _c;\n$RefreshReg$(_c, \"CharSearchForm\");","map":{"version":3,"names":["useState","Formik","Form","Field","ErrorMessage","FormikErrorMessage","Yup","Link","useMarvelService","CharSearchForm","char","setChar","loading","error","getCharacterByName","clearError","onCharLoaded","updateChar","name","then","errorMessage","results","length","id","charName","object","string","required"],"sources":["C:/Users/PC/my-app/src/components/charSearchForm/CharSearchForm.js"],"sourcesContent":["import {useState} from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n    const [char, setChar] = useState(null);\r\n    const {loading, error, getCharacterByName, clearError} = useMarvelService();\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = (name) => {\r\n        clearError();\r\n\r\n        getCharacterByName(name)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n    const results = !char ? null : char.length > 0 ?\r\n                    <div className=\"char__search-wrapper\">\r\n                        <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n                        <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n                            <div className=\"inner\">To page</div>\r\n                        </Link>\r\n                    </div> : \r\n                    <div className=\"char__search-error\">\r\n                        The character was not found. Check the name and try again\r\n                    </div>;\r\n\r\n    return (\r\n        <div className=\"char__search-form\">\r\n            <Formik\r\n                initialValues = {{\r\n                    charName: ''\r\n                }}\r\n                validationSchema = {Yup.object({\r\n                    charName: Yup.string().required('This field is required')\r\n                })}\r\n                onSubmit = { ({charName}) => {\r\n                    updateChar(charName);\r\n                }}\r\n            >\r\n                <Form>\r\n                    <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n                    <div className=\"char__search-wrapper\">\r\n                        <Field \r\n                            id=\"charName\" \r\n                            name='charName' \r\n                            type='text' \r\n                            placeholder=\"Enter name\"/>\r\n                        <button \r\n                            type='submit' \r\n                            className=\"button button__main\"\r\n                            disabled={loading}>\r\n                            <div className=\"inner\">find</div>\r\n                        </button>\r\n                    </div>\r\n                    <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n                </Form>\r\n            </Formik>\r\n            {results}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharSearchForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}