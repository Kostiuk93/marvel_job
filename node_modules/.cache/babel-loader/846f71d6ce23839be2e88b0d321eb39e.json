{"ast":null,"code":"class MarvelService {\n  constructor() {\n    this._apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    this._apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\n\n    this.getResourse = async url => {\n      let res = await fetch(url);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}, status:  ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllCharacters = async () => {\n      const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`);\n      return res.data.results.map(this._transformCaracter);\n    };\n\n    this.getCharacter = async id => {\n      const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`); // получаем персонажа\n\n      return this._transformCaracter(res.data.results[0]); // возвращаем результат персонажа\n    };\n\n    this._transformCaracter = char => {\n      return {\n        id: char.id,\n        name: char.name,\n        description: char.description ? `${char.description.slice(0, 150)}...` : `Description is missing! Sorry!`,\n        descriptionAll: char.description ? `${char.description.slice(0, 500)}...` : `Description is missing! Sorry!`,\n        thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n        homepage: char.urls[0].url,\n        wiki: char.urls[1].url,\n        comics: char.comics.items\n      };\n    };\n  }\n\n}\n\nexport default MarvelService;","map":{"version":3,"sources":["C:/Users/PC/my-app/src/services/MarvelService.js"],"names":["MarvelService","_apiBase","_apiKey","getResourse","url","res","fetch","ok","Error","status","json","getAllCharacters","data","results","map","_transformCaracter","getCharacter","id","char","name","description","slice","descriptionAll","thumbnail","path","extension","homepage","urls","wiki","comics","items"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAAA;AAAA,SAMhBC,QANgB,GAML,2CANK;AAAA,SAOhBC,OAPgB,GAON,yCAPM;;AAAA,SAUhBC,WAVgB,GAUF,MAAOC,GAAP,IAAgB;AAC1B,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;;AAEA,UAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,cAAM,IAAIC,KAAJ,CAAW,mBAAkBJ,GAAI,cAAaC,GAAG,CAACI,MAAO,EAAzD,CAAN;AACH;;AAED,aAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH,KAlBe;;AAAA,SAoBhBC,gBApBgB,GAoBG,YAAY;AAC3B,YAAMN,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKF,QAAS,iCAAgC,KAAKC,OAAQ,EAA/E,CAAlB;AACA,aAAOG,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqB,KAAKC,kBAA1B,CAAP;AACH,KAvBe;;AAAA,SAyBhBC,YAzBgB,GAyBD,MAAOC,EAAP,IAAc;AACzB,YAAMZ,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKF,QAAS,cAAagB,EAAG,IAAG,KAAKf,OAAQ,EAAlE,CAAlB,CADyB,CAC+D;;AACxF,aAAO,KAAKa,kBAAL,CAAwBV,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAxB,CAAP,CAFyB,CAE2B;AACvD,KA5Be;;AAAA,SA8BhBE,kBA9BgB,GA8BMG,IAAD,IAAU;AAE3B,aAAO;AACHD,QAAAA,EAAE,EAAEC,IAAI,CAACD,EADN;AAEHE,QAAAA,IAAI,EAAED,IAAI,CAACC,IAFR;AAGHC,QAAAA,WAAW,EAAEF,IAAI,CAACE,WAAL,GAAqB,GAAEF,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,GAA1B,CAA+B,KAAtD,GAA8D,gCAHxE;AAIHC,QAAAA,cAAc,EAAEJ,IAAI,CAACE,WAAL,GAAoB,GAAEF,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,GAA1B,CAA+B,KAArD,GAA6D,gCAJ1E;AAKHE,QAAAA,SAAS,EAAEL,IAAI,CAACK,SAAL,CAAeC,IAAf,GAAsB,GAAtB,GAA4BN,IAAI,CAACK,SAAL,CAAeE,SALnD;AAMHC,QAAAA,QAAQ,EAAER,IAAI,CAACS,IAAL,CAAU,CAAV,EAAavB,GANpB;AAOHwB,QAAAA,IAAI,EAAEV,IAAI,CAACS,IAAL,CAAU,CAAV,EAAavB,GAPhB;AAQHyB,QAAAA,MAAM,EAAEX,IAAI,CAACW,MAAL,CAAYC;AARjB,OAAP;AAUH,KA1Ce;AAAA;;AAAA;;AA6CpB,eAAe9B,aAAf","sourcesContent":["class MarvelService {\r\n    //Alex\r\n    // _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    // _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\r\n    \r\n    //Alex93\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\r\n\r\n\r\n    getResourse = async (url ) => {\r\n        let res = await fetch(url);\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status:  ${res.status}`);\r\n        }\r\n    \r\n        return await res.json();\r\n    };\r\n\r\n    getAllCharacters = async () => {\r\n        const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCaracter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`); // получаем персонажа\r\n        return this._transformCaracter(res.data.results[0]) // возвращаем результат персонажа\r\n    }\r\n\r\n    _transformCaracter = (char) => {\r\n        \r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description  ? `${char.description.slice(0, 150)}...` : `Description is missing! Sorry!`,\r\n            descriptionAll: char.description ? `${char.description.slice(0, 500)}...` : `Description is missing! Sorry!`,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;"]},"metadata":{},"sourceType":"module"}