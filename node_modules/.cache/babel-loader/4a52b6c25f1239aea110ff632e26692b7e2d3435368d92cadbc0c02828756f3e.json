{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useHttp } from \"../hooks/http.hook\";\nconst useMarvelService = () => {\n  _s();\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n\n  //Alex\n  // _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  // _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\n\n  //Alex93\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\n  const _baseOffset = 210;\n  const getAllCharacters = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _baseOffset;\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`); // получаем персонажа\n    return _transformCharacter(res.data.results[0]); // возвращаем результат персонажа\n  };\n\n  const getAllComics = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComics);\n  };\n  const getComics = async id => {\n    const res = await request(`${_apiBase}comic/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n  const getCharacterByName = async name => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects.language || 'en-us',\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n    };\n  };\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacter,\n    getAllComics,\n    getComic,\n    getCharacterByName\n  };\n};\n_s(useMarvelService, \"9hyEhuOfcolEaHPbDIyQe2OeeLY=\", false, function () {\n  return [useHttp];\n});\nexport default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","loading","request","error","clearError","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","getCharacterByName","name","char","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","title","pageCount","language","textObjects","price","prices","getComic"],"sources":["C:/Users/PC/my-app/src/services/MarvelService.js"],"sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    //Alex\r\n    // _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    // _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\r\n    \r\n    //Alex93\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`); // получаем персонажа\r\n        return _transformCharacter(res.data.results[0]) // возвращаем результат персонажа\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comic/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic, getCharacterByName};\r\n}\r\n\r\nexport default useMarvelService;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}