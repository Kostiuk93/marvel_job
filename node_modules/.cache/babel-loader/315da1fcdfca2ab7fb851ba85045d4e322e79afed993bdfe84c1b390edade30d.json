{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\my-app\\\\src\\\\components\\\\comicsList\\\\ComicsList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner,';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComicsList = props => {\n  _s();\n  const [comicsList, setComicsList] = useState([]);\n  const {\n    loading,\n    error,\n    getAllComics,\n    clearError\n  } = useMarvelService();\n  const [comicsEnded, setComicsEnded] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n  const onComicsListLoaded = newComicsList => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList(comicsList => [...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset(offset => offset + 8);\n    setComicsEnded(ended);\n  };\n\n  // Этот метод создан для оптимизации, \n  // чтобы не помещать такую конструкцию в метод render\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comics__item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.thumbnail,\n            alt: item.title,\n            style: imgStyle,\n            className: \"comics__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comics__item-price\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comics__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n  const items = renderItems(comicsList);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 34\n  }, this) : null;\n  const spinner = loading && !newItemLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 50\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comics__list\",\n    children: [errorMessage, spinner, items, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemLoading,\n      style: {\n        'display': comicsEnded ? 'none' : 'block'\n      },\n      onClick: () => onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n// <div className=\"comics__list\">\n//     <ul className=\"comics__grid\">\n//         <li className=\"comics__item\">\n//             <a href=\"#\">\n//                \n//             </a>\n//         </li>\n//     </ul>\n//     <button className=\"button button__main button__long\">\n//         <div className=\"inner\">load more</div>\n//     </button>\n// </div>\n_s(ComicsList, \"HwgXYdarqSTtJrTdLfRY4yTOYFM=\", false, function () {\n  return [useMarvelService];\n});\n_c = ComicsList;\nexport default ComicsList;\nvar _c;\n$RefreshReg$(_c, \"ComicsList\");","map":{"version":3,"names":["useState","useEffect","useRef","PropTypes","Spinner","ErrorMessage","useMarvelService","ComicsList","props","comicsList","setComicsList","loading","error","getAllComics","clearError","comicsEnded","setComicsEnded","offset","setOffset","newItemLoading","setNewItemLoading","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","renderItems","arr","items","map","item","i","imgStyle","thumbnail","title","price","errorMessage","spinner"],"sources":["C:/Users/PC/my-app/src/components/comicsList/ComicsList.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner,';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = (props) => {\n    const [comicsList, setComicsList] = useState([]);\n    const {loading, error, getAllComics, clearError} = useMarvelService();\n    const [comicsEnded, setComicsEnded] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"comics__item\"\n                    key={i}\n                    > \n                        <a href=\"#\">\n                            <img src={item.thumbnail} alt={item.title} style={imgStyle} className=\"comics__item-img\"/>\n                            <div className=\"comics__item\">{item.title}</div>\n                            <div className=\"comics__item-price\">{item.price}</div>\n                        </a>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\n        // <div className=\"comics__list\">\n        //     <ul className=\"comics__grid\">\n        //         <li className=\"comics__item\">\n        //             <a href=\"#\">\n        //                \n        //             </a>\n        //         </li>\n        //     </ul>\n        //     <button className=\"button button__main button__long\">\n        //         <div className=\"inner\">load more</div>\n        //     </button>\n        // </div>\n    \n\nexport default ComicsList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}