{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\my-app\\\\src\\\\components\\\\pages\\\\SingleComicPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner,';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './singleComicPage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleComicPage = () => {\n  _s();\n  const [comics, setComics] = useState([]);\n  const {\n    loading,\n    error,\n    getComics,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateComics();\n  }, []);\n  const onComicsLoaded = comics => {\n    setComics(comics);\n  };\n  const updateComics = () => {\n    clearError();\n    getComics().then(onComicsLoaded);\n  };\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 34\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 31\n  }, this) : null;\n  const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n    comics: comics\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 43\n  }, this) : null;\n  const {\n    title,\n    thumbnail\n  } = comics;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-comic\",\n    children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: title,\n      className: \"single-comic__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"single-comic__back\",\n      children: \"Back to all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(SingleComicPage, \"ie4Akj4jhcY4DbxO3f1vw1fP1dI=\", false, function () {\n  return [useMarvelService];\n});\n_c = SingleComicPage;\nconst View = _ref => {\n  let {\n    comics\n  } = _ref;\n  const {\n    description,\n    title,\n    pageCount,\n    language,\n    price\n  } = comics;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-comic__info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"single-comic__name\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"single-comic__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"single-comic__descr\",\n      children: pageCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"single-comic__descr\",\n      children: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-comic__price\",\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c2 = View;\nexport default SingleComicPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"SingleComicPage\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"names":["useState","useEffect","useMarvelService","Spinner","ErrorMessage","SingleComicPage","comics","setComics","loading","error","getComics","clearError","updateComics","onComicsLoaded","then","errorMessage","spinner","content","title","thumbnail","View","description","pageCount","language","price"],"sources":["C:/Users/PC/my-app/src/components/pages/SingleComicPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner,';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const [comics, setComics] = useState([]);\r\n    const {loading, error, getComics, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComics();\r\n    }, []);\r\n\r\n    const onComicsLoaded = (comics) => {\r\n        setComics(comics);\r\n    };\r\n\r\n    const updateComics = () => {\r\n        clearError();\r\n        getComics()\r\n            .then(onComicsLoaded)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error) ? <View comics={comics}/> : null;\r\n    const {title, thumbnail} = comics;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            \r\n            <a href=\"#\" className=\"single-comic__back\">Back to all</a>\r\n        </div>\r\n    )\r\n}\r\nconst View = ({comics}) => {\r\n    const {description, title, pageCount, language, price} = comics;\r\n\r\n    return (\r\n        <div className=\"single-comic__info\">\r\n            <h2 className=\"single-comic__name\">{title}</h2>\r\n            <p className=\"single-comic__descr\">{description}</p>\r\n            <p className=\"single-comic__descr\">{pageCount}</p>\r\n            <p className=\"single-comic__descr\">{language}</p>\r\n            <div className=\"single-comic__price\">{price}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleComicPage;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,YAAY,MAAM,8BAA8B;AAEvD,OAAO,wBAAwB;AAAC;AAEhC,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAACQ,OAAO;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAGT,gBAAgB,EAAE;EAElED,SAAS,CAAC,MAAM;IACZW,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAIP,MAAM,IAAK;IAC/BC,SAAS,CAACD,MAAM,CAAC;EACrB,CAAC;EAED,MAAMM,YAAY,GAAG,MAAM;IACvBD,UAAU,EAAE;IACZD,SAAS,EAAE,CACNI,IAAI,CAACD,cAAc,CAAC;EAC7B,CAAC;EAED,MAAME,YAAY,GAAGN,KAAK,gBAAG,QAAC,YAAY;IAAA;IAAA;IAAA;EAAA,QAAE,GAAG,IAAI;EACnD,MAAMO,OAAO,GAAGR,OAAO,gBAAG,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAE,GAAG,IAAI;EAC3C,MAAMS,OAAO,GAAG,EAAET,OAAO,IAAIC,KAAK,CAAC,gBAAG,QAAC,IAAI;IAAC,MAAM,EAAEH;EAAO;IAAA;IAAA;IAAA;EAAA,QAAE,GAAG,IAAI;EACpE,MAAM;IAACY,KAAK;IAAEC;EAAS,CAAC,GAAGb,MAAM;EAEjC,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,WACxBS,YAAY,EACZC,OAAO,EACPC,OAAO,eACR;MAAK,GAAG,EAAEE,SAAU;MAAC,GAAG,EAAED,KAAM;MAAC,SAAS,EAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAE,eAEhE;MAAG,IAAI,EAAC,GAAG;MAAC,SAAS,EAAC,oBAAoB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QACxD;AAEd,CAAC;AAAA,GAjCKb,eAAe;EAAA,QAE+BH,gBAAgB;AAAA;AAAA,KAF9DG,eAAe;AAkCrB,MAAMe,IAAI,GAAG,QAAc;EAAA,IAAb;IAACd;EAAM,CAAC;EAClB,MAAM;IAACe,WAAW;IAAEH,KAAK;IAAEI,SAAS;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGlB,MAAM;EAE/D,oBACI;IAAK,SAAS,EAAC,oBAAoB;IAAA,wBAC/B;MAAI,SAAS,EAAC,oBAAoB;MAAA,UAAEY;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAC/C;MAAG,SAAS,EAAC,qBAAqB;MAAA,UAAEG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpD;MAAG,SAAS,EAAC,qBAAqB;MAAA,UAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClD;MAAG,SAAS,EAAC,qBAAqB;MAAA,UAAEC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eACjD;MAAK,SAAS,EAAC,qBAAqB;MAAA,UAAEC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAChD;AAEd,CAAC;AAAA,MAZKJ,IAAI;AAeV,eAAef,eAAe;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}