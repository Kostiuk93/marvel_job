{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useHttp } from \"../hooks/http.hook\";\nconst useMarvelService = () => {\n  _s();\n  const {\n    loading,\n    request,\n    error\n  } = useHttp();\n\n  //Alex\n  // _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  // _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\n\n  //Alex93\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\n  const _baseOffset = 210;\n  const getAllCharacters = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _baseOffset;\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCaracter);\n  };\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`); // получаем персонажа\n    return _transformCaracter(res.data.results[0]); // возвращаем результат персонажа\n  };\n\n  const _transformCaracter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter\n  };\n};\n_s(useMarvelService, \"lvn5cLpzjqx//rJqYq41fMjJU88=\", false, function () {\n  return [useHttp];\n});\nexport default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","loading","request","error","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCaracter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items"],"sources":["C:/Users/PC/my-app/src/services/MarvelService.js"],"sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error} = useHttp();\r\n\r\n    //Alex\r\n    // _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    // _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\r\n    \r\n    //Alex93\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCaracter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`); // получаем персонажа\r\n        return _transformCaracter(res.data.results[0]) // возвращаем результат персонажа\r\n    }\r\n\r\n    const _transformCaracter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacter};\r\n}\r\n\r\nexport default useMarvelService;"],"mappings":";AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAC3B,MAAM;IAACC,OAAO;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGJ,OAAO,EAAE;;EAE3C;EACA;EACA;;EAEA;EACA,MAAMK,QAAQ,GAAG,2CAA2C;EAC5D,MAAMC,OAAO,GAAG,yCAAyC;EACzD,MAAMC,WAAW,GAAG,GAAG;EAEvB,MAAMC,gBAAgB,GAAG,kBAAgC;IAAA,IAAzBC,MAAM,uEAAGF,WAAW;IAChD,MAAMG,GAAG,GAAG,MAAMP,OAAO,CAAE,GAAEE,QAAS,6BAA4BI,MAAO,IAAGH,OAAQ,EAAC,CAAC;IACtF,OAAOI,GAAG,CAACC,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAAC;EACnD,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMN,GAAG,GAAG,MAAMP,OAAO,CAAE,GAAEE,QAAS,cAAaW,EAAG,IAAGV,OAAQ,EAAC,CAAC,CAAC,CAAC;IACrE,OAAOQ,kBAAkB,CAACJ,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAC;EACnD,CAAC;;EAED,MAAME,kBAAkB,GAAIG,IAAI,IAAK;IACjC,OAAO;MACHD,EAAE,EAAEC,IAAI,CAACD,EAAE;MACXE,IAAI,EAAED,IAAI,CAACC,IAAI;MACfC,WAAW,EAAEF,IAAI,CAACE,WAAW,GAAI,GAAEF,IAAI,CAACE,WAAW,CAACC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAE,KAAI,GAAG,4CAA4C;MACrHC,SAAS,EAAEJ,IAAI,CAACI,SAAS,CAACC,IAAI,GAAG,GAAG,GAAGL,IAAI,CAACI,SAAS,CAACE,SAAS;MAC/DC,QAAQ,EAAEP,IAAI,CAACQ,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG;MAC1BC,IAAI,EAAEV,IAAI,CAACQ,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG;MACtBE,MAAM,EAAEX,IAAI,CAACW,MAAM,CAACC;IACxB,CAAC;EACL,CAAC;EAED,OAAO;IAAC3B,OAAO;IAAEE,KAAK;IAAEI,gBAAgB;IAAEO;EAAY,CAAC;AAC3D,CAAC;AAAA,GAnCKd,gBAAgB;EAAA,QACgBD,OAAO;AAAA;AAoC7C,eAAeC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}