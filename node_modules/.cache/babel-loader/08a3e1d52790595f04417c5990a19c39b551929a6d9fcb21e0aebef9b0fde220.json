{"ast":null,"code":"var _this = this,\n  _s = $RefreshSig$();\nimport { useHttp } from \"../hooks/http.hook\";\nconst useMarvelService = () => {\n  _s();\n  const {\n    loading,\n    request,\n    error\n  } = useHttp();\n\n  //Alex\n  // _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  // _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\n\n  //Alex93\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  _apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\n  _baseOffset = 210;\n  const getAllCharacters = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this._baseOffset;\n    const res = await _this.getResourse(`${_this._apiBase}characters?limit=9&offset=${offset}&${_this._apiKey}`);\n    return res.data.results.map(_this._transformCaracter);\n  };\n  const getCharacter = async id => {\n    const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`); // получаем персонажа\n    return this._transformCaracter(res.data.results[0]); // возвращаем результат персонажа\n  };\n\n  _transformCaracter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n};\n_s(useMarvelService, \"lvn5cLpzjqx//rJqYq41fMjJU88=\", false, function () {\n  return [useHttp];\n});\nexport default MarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","loading","request","error","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","getResourse","data","results","map","_transformCaracter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","MarvelService"],"sources":["C:/Users/PC/my-app/src/services/MarvelService.js"],"sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, request, error} = useHttp();\r\n\r\n    //Alex\r\n    // _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    // _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\r\n    \r\n    //Alex93\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\r\n    _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCaracter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`); // получаем персонажа\r\n        return this._transformCaracter(res.data.results[0]) // возвращаем результат персонажа\r\n    }\r\n\r\n    _transformCaracter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAE3B,MAAM;IAACC,OAAO;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGJ,OAAO,EAAE;;EAE3C;EACA;EACA;;EAEA;EACAK,QAAQ,GAAG,2CAA2C;EACtDC,OAAO,GAAG,yCAAyC;EACnDC,WAAW,GAAG,GAAG;EAEjB,MAAMC,gBAAgB,GAAG,kBAAqC;IAAA,IAA9BC,MAAM,uEAAG,KAAI,CAACF,WAAW;IACrD,MAAMG,GAAG,GAAG,MAAM,KAAI,CAACC,WAAW,CAAE,GAAE,KAAI,CAACN,QAAS,6BAA4BI,MAAO,IAAG,KAAI,CAACH,OAAQ,EAAC,CAAC;IACzG,OAAOI,GAAG,CAACE,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,KAAI,CAACC,kBAAkB,CAAC;EACxD,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMP,GAAG,GAAG,MAAM,IAAI,CAACC,WAAW,CAAE,GAAE,IAAI,CAACN,QAAS,cAAaY,EAAG,IAAG,IAAI,CAACX,OAAQ,EAAC,CAAC,CAAC,CAAC;IACxF,OAAO,IAAI,CAACS,kBAAkB,CAACL,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAC;EACxD,CAAC;;EAEDE,kBAAkB,GAAIG,IAAI,IAAK;IAC3B,OAAO;MACHD,EAAE,EAAEC,IAAI,CAACD,EAAE;MACXE,IAAI,EAAED,IAAI,CAACC,IAAI;MACfC,WAAW,EAAEF,IAAI,CAACE,WAAW,GAAI,GAAEF,IAAI,CAACE,WAAW,CAACC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAE,KAAI,GAAG,4CAA4C;MACrHC,SAAS,EAAEJ,IAAI,CAACI,SAAS,CAACC,IAAI,GAAG,GAAG,GAAGL,IAAI,CAACI,SAAS,CAACE,SAAS;MAC/DC,QAAQ,EAAEP,IAAI,CAACQ,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG;MAC1BC,IAAI,EAAEV,IAAI,CAACQ,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG;MACtBE,MAAM,EAAEX,IAAI,CAACW,MAAM,CAACC;IACxB,CAAC;EACL,CAAC;AACL,CAAC;AAAA,GAlCK7B,gBAAgB;EAAA,QAEgBD,OAAO;AAAA;AAkC7C,eAAe+B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}