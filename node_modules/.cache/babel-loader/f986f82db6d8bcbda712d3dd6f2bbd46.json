{"ast":null,"code":"class MarvelService {\n  constructor() {\n    this._apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    this._apiKey = 'apikey=f75e1499b218241b71745986222174a5';\n\n    this.getResourse = async url => {\n      let res = await fetch(url);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}, status:  ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllCharacters = () => {\n      return this.getResourse(`${this._apiBase}characters?limit=9&offset=300&${this._apiKey}`);\n    };\n\n    this.getCharacter = async id => {\n      const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`); // получаем персонажа\n\n      return this._transformCaracter(res); // возвращаем результат персонажа\n    };\n\n    this._transformCaracter = res => {\n      const resData = res.data.results[0];\n      return {\n        name: resData.name,\n        description: resData.description,\n        thumbnail: resData.thumbnail.path + '.' + res.data.results[0].thumbnail.extension,\n        homepage: resData.urls[0].url,\n        wiki: resData.urls[1].url\n      };\n    };\n  }\n\n}\n\nexport default MarvelService;","map":{"version":3,"sources":["C:/Users/PC/my-app/src/services/MarvelService.js"],"names":["MarvelService","_apiBase","_apiKey","getResourse","url","res","fetch","ok","Error","status","json","getAllCharacters","getCharacter","id","_transformCaracter","resData","data","results","name","description","thumbnail","path","extension","homepage","urls","wiki"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAAA;AAAA,SAChBC,QADgB,GACL,2CADK;AAAA,SAEhBC,OAFgB,GAEN,yCAFM;;AAAA,SAIhBC,WAJgB,GAIF,MAAOC,GAAP,IAAgB;AAC1B,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;;AAEA,UAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,cAAM,IAAIC,KAAJ,CAAW,mBAAkBJ,GAAI,cAAaC,GAAG,CAACI,MAAO,EAAzD,CAAN;AACH;;AAED,aAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH,KAZe;;AAAA,SAchBC,gBAdgB,GAcG,MAAM;AACrB,aAAO,KAAKR,WAAL,CAAkB,GAAE,KAAKF,QAAS,iCAAgC,KAAKC,OAAQ,EAA/E,CAAP;AACH,KAhBe;;AAAA,SAkBhBU,YAlBgB,GAkBD,MAAOC,EAAP,IAAc;AACzB,YAAMR,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKF,QAAS,cAAaY,EAAG,IAAG,KAAKX,OAAQ,EAAlE,CAAlB,CADyB,CAC+D;;AACxF,aAAO,KAAKY,kBAAL,CAAwBT,GAAxB,CAAP,CAFyB,CAEW;AACvC,KArBe;;AAAA,SAuBhBS,kBAvBgB,GAuBMT,GAAD,IAAS;AAC1B,YAAMU,OAAO,GAAGV,GAAG,CAACW,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAhB;AACA,aAAO;AACHC,QAAAA,IAAI,EAAEH,OAAO,CAACG,IADX;AAEHC,QAAAA,WAAW,EAAEJ,OAAO,CAACI,WAFlB;AAGHC,QAAAA,SAAS,EAAEL,OAAO,CAACK,SAAR,CAAkBC,IAAlB,GAAyB,GAAzB,GAA+BhB,GAAG,CAACW,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBG,SAApB,CAA8BE,SAHrE;AAIHC,QAAAA,QAAQ,EAAER,OAAO,CAACS,IAAR,CAAa,CAAb,EAAgBpB,GAJvB;AAKHqB,QAAAA,IAAI,EAAEV,OAAO,CAACS,IAAR,CAAa,CAAb,EAAgBpB;AALnB,OAAP;AAOH,KAhCe;AAAA;;AAAA;;AAmCpB,eAAeJ,aAAf","sourcesContent":["class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\r\n\r\n    getResourse = async (url ) => {\r\n        let res = await fetch(url);\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status:  ${res.status}`);\r\n        }\r\n    \r\n        return await res.json();\r\n    };\r\n\r\n    getAllCharacters = () => {\r\n        return this.getResourse(`${this._apiBase}characters?limit=9&offset=300&${this._apiKey}`);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`); // получаем персонажа\r\n        return this._transformCaracter(res) // возвращаем результат персонажа\r\n    }\r\n\r\n    _transformCaracter = (res) => {\r\n        const resData = res.data.results[0]\r\n        return {\r\n            name: resData.name,\r\n            description: resData.description,\r\n            thumbnail: resData.thumbnail.path + '.' + res.data.results[0].thumbnail.extension,\r\n            homepage: resData.urls[0].url,\r\n            wiki: resData.urls[1].url \r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;"]},"metadata":{},"sourceType":"module"}