{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\my-app\\\\src\\\\components\\\\charList\\\\CharList.js\";\nimport { Component } from 'react/cjs/react.development';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      // идет загрузка данных в char, то loading true\n      error: false //изначально false, так как изначально нет никакой ошибки\n\n    };\n    this.marvelService = new MarvelService();\n\n    this.onRequest = offset => {\n      this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    };\n\n    this.onCharListLoaded = charList => {\n      this.setState({\n        charList,\n        loading: false\n      }); // как только загрузка данных закончилась в char, то loading снановится false\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.marvelService.getAllCharacters().then(this.onCharListLoaded).catch(this.onError);\n  }\n\n  // Этот метод создан для оптимизации, \n  // чтобы не помещать такую конструкцию в метод render\n  renderItems(arr) {\n    const items = arr.map(item => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n      const noImgUrl = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n\n      if (item.thumbnail === noImgUrl) {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        onClick: () => this.props.onCharSelected(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    }); // А эта конструкция вынесена для центровки спиннера/ошибки\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error\n    } = this.state;\n    const items = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["C:/Users/PC/my-app/src/components/charList/CharList.js"],"names":["Component","Spinner","ErrorMessage","MarvelService","CharList","state","charList","loading","error","marvelService","onRequest","offset","getAllCharacters","then","onCharListLoaded","catch","onError","setState","componentDidMount","renderItems","arr","items","map","item","imgStyle","noImgUrl","thumbnail","props","onCharSelected","id","name","render","errorMessage","spinner","content"],"mappings":"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","sourcesContent":["import { Component } from 'react/cjs/react.development';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component{\n    state = {\n        charList: [],\n        loading: true, // идет загрузка данных в char, то loading true\n        error: false //изначально false, так как изначально нет никакой ошибки\n    }\n    \n    marvelService = new MarvelService();\n    \n    componentDidMount() {\n        this.marvelService\n            .getAllCharacters()\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onRequest = (offset) => {\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoaded = (charList) => {\n        this.setState({\n            charList, \n            loading: false}) // как только загрузка данных закончилась в char, то loading снановится false\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n     // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            const noImgUrl = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n            if (item.thumbnail === noImgUrl) {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={()=> this.props.onCharSelected(item.id)}\n                    >\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render () {\n        const {charList, loading, error} = this.state;\n        const items = this.renderItems(charList);\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}