{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n  _s();\n\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp(); //Alex\n  // _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  // _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\n  //Alex93\n\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCaracter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`); // получаем персонажа\n\n    return _transformCaracter(res.data.results[0]); // возвращаем результат персонажа\n  };\n\n  const getAllComics = async (offset = _baseOffset) => {\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComics = async id => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`); // получаем персонажа\n\n    return _transformComics(res.data.results[0]); // возвращаем результат персонажа\n  };\n\n  const _transformCaracter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description,\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      prices: comics.prices.price\n    };\n  };\n\n  return {\n    loading,\n    error,\n    getAllCharacters,\n    getCharacter,\n    clearError,\n    getAllComics,\n    getComics\n  };\n};\n\n_s(useMarvelService, \"9hyEhuOfcolEaHPbDIyQe2OeeLY=\", false, function () {\n  return [useHttp];\n});\n\nexport default useMarvelService;","map":{"version":3,"sources":["C:/Users/PC/my-app/src/services/MarvelService.js"],"names":["useHttp","useMarvelService","loading","request","error","clearError","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCaracter","getCharacter","id","getAllComics","_transformComics","getComics","char","name","description","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","title","prices","price"],"mappings":"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","sourcesContent":["import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, request, error, clearError} = useHttp()\r\n    \r\n\r\n    //Alex\r\n    // _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    // _apiKey = 'apikey=f75e1499b218241b71745986222174a5';\r\n    \r\n    //Alex93\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=2a5a4367491be5b1b90e0fe3a2d81b01';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCaracter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`); // получаем персонажа\r\n        return _transformCaracter(res.data.results[0]) // возвращаем результат персонажа\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`); // получаем персонажа\r\n        return _transformComics(res.data.results[0]) // возвращаем результат персонажа\r\n    }\r\n\r\n    const _transformCaracter = (char) => {\r\n        \r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        \r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            prices: comics.prices.price\r\n        }\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComics}\r\n}\r\n\r\nexport default useMarvelService;"]},"metadata":{},"sourceType":"module"}