{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\my-app\\\\src\\\\components\\\\charList\\\\CharList.js\";\nimport { Component } from 'react/cjs/react.development';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false,\n      newItemLoading: false,\n      offset: 210,\n      sharEnded: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onRequest = offset => {\n      this.onCharListLoading();\n      this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    };\n\n    this.onCharListLoading = () => {\n      this.setState({\n        newItemLoading: true\n      });\n    };\n\n    this.onCharListLoaded = newCharList => {\n      let ended = false;\n\n      if (newCharList.length < 9) {\n        ended = true;\n      }\n\n      this.setState(({\n        offset,\n        charList\n      }) => ({\n        charList: [...charList, ...newCharList],\n        loading: false,\n        newItemLoading: false,\n        offset: offset + 9\n      }));\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.onRequest();\n  }\n\n  // Этот метод создан для оптимизации, \n  // чтобы не помещать такую конструкцию в метод render\n  renderItems(arr) {\n    const items = arr.map(item => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n      const noImgUrl = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n\n      if (item.thumbnail === noImgUrl) {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        onClick: () => this.props.onCharSelected(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    }); // А эта конструкция вынесена для центровки спиннера/ошибки\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error,\n      offset,\n      newItemLoading\n    } = this.state;\n    const items = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        disabled: newItemLoading,\n        onClick: () => this.onRequest(offset),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["C:/Users/PC/my-app/src/components/charList/CharList.js"],"names":["Component","Spinner","ErrorMessage","MarvelService","CharList","state","charList","loading","error","newItemLoading","offset","sharEnded","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","setState","newCharList","ended","length","componentDidMount","renderItems","arr","items","map","item","imgStyle","noImgUrl","thumbnail","props","onCharSelected","id","name","render","errorMessage","spinner","content"],"mappings":"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","sourcesContent":["import { Component } from 'react/cjs/react.development';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component{\n    state = {\n        charList: [],\n        loading: true, \n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        sharEnded: false\n    }\n    \n    marvelService = new MarvelService();\n    \n    componentDidMount() {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading()\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false\n        if (newCharList.length < 9) {\n            ended = true\n        }\n\n\n        this.setState(({offset, charList}) =>({\n            charList: [...charList, ...newCharList], \n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n     // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            const noImgUrl = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n            if (item.thumbnail === noImgUrl) {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={()=> this.props.onCharSelected(item.id)}\n                    >\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render () {\n        const {charList, loading, error, offset, newItemLoading} = this.state;\n        const items = this.renderItems(charList);\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\" \n                    disabled={newItemLoading}\n                    onClick={() => this.onRequest(offset)}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}