{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\my-app\\\\src\\\\components\\\\forms\\\\Form.js\";\nimport { Formik, Form, Field, ErrorMessage, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst myTextInput = _ref => {\n  let {\n    label,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.name,\n      children: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\nconst CustomForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      amount: 0,\n      currency: '',\n      text: '',\n      terms: false\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().min(2, 'Минимум 2 символа для заполнения!').max(20, 'Максимум 20 символов для заполнения!').required('Обязательное поле!'),\n      email: Yup.string().email('Неправильный email адрес!').required('Обязательное поле!'),\n      amount: Yup.number().min(5, 'Не менее 5').required('Обязательное поле!'),\n      currency: Yup.string().required('Выберите валюту'),\n      text: Yup.string().min(10, 'Не менее 10 символов'),\n      terms: Yup.boolean().required('Необходимо согласие!').oneOf([true], 'Необходимо согласие!')\n    }),\n    onSubmit: values => console.log(JSON.stringify(values, null, 2)),\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u0436\\u0435\\u0440\\u0442\\u0432\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        id: \"name\",\n        name: \"name\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        className: \"error\",\n        name: \"name\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"\\u0412\\u0430\\u0448\\u0430 \\u043F\\u043E\\u0447\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        className: \"error\",\n        name: \"email\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        id: \"amount\",\n        name: \"amount\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        className: \"error\",\n        name: \"amount\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"currency\",\n        children: \"\\u0412\\u0430\\u043B\\u044E\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        id: \"currency\",\n        name: \"currency\",\n        as: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u043B\\u044E\\u0442\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"USD\",\n          children: \"USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"UAH\",\n          children: \"UAH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"RUB\",\n          children: \"RUB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        className: \"error\",\n        name: \"currency\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        children: \"\\u0412\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        id: \"text\",\n        name: \"text\",\n        as: \"textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        className: \"error\",\n        name: \"text\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"terms\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), \"\\u0421\\u043E\\u0433\\u043B\\u0430\\u0448\\u0430\\u0435\\u0442\\u0435\\u0441\\u044C \\u0441 \\u043F\\u043E\\u043B\\u0438\\u0442\\u0438\\u043A\\u043E\\u0439 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        className: \"error\",\n        name: \"terms\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = CustomForm;\nexport default CustomForm;\n\n// import {useFormik} from 'formik';\n// import * as Yup from 'yup';\n\n// // const validate = values => {\n// //     const errors = {};\n\n// //     if (!values.name) {\n// //         errors.name = 'Обязательное поле!';\n// //     } else if (values.name.length < 2) {\n// //         errors.name = 'Минимум 2 символа для заполнения!';\n// //     } else if (values.name.length > 21) {\n// //         errors.name = 'Максимум 20 символов для заполнения!';\n// //     }\n\n// //     if (!values.email) {\n// //         errors.email = 'Обязательное поле!';\n// //     } else if ( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n// //         errors.email = 'Неправильный email адрес';\n// //     }\n\n// //     return errors;\n// // }\n\n// const CustomForm = () => {\n//     const formik = useFormik({\n//         initialValues: { \n//             name: '',\n//             email: '',\n//             amount: 0,\n//             currency: '',\n//             text: '',\n//             terms: false\n//         },\n//         validationSchema: Yup.object({\n//             name: Yup.string()\n//                      .min(2, 'Минимум 2 символа для заполнения!')\n//                      .max(20, 'Максимум 20 символов для заполнения!')\n//                      .required('Обязательное поле!'),\n//             email: Yup.string()\n//                      .email('Неправильный email адрес!')\n//                      .required('Обязательное поле!'),\n//             amount: Yup.number()\n//                      .min(5, 'Не менее 5')\n//                      .required('Обязательное поле!'),\n//             currency: Yup.string().required('Выберите валюту'),\n//             text: Yup.string()\n//                      .min(10, 'Не менее 10 символов'),\n//             terms: Yup.boolean()\n//                      .required('Необходимо согласие!')\n//                      .oneOf([true], 'Необходимо согласие!'),\n//         }),\n//         onSubmit: values => console.log(JSON.stringify(values, null, 2))\n//     })\n//     return (\n//         <form className=\"form\" onSubmit={formik.handleSubmit}>\n//             <h2>Отправить пожертвование</h2>\n//             <label htmlFor=\"name\">Ваше имя</label>\n//             <input\n//                 id=\"name\"\n//                 name=\"name\"\n//                 type=\"text\"\n//                 value={formik.values.name}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}\n//             />\n//             {formik.errors.name && formik.touched.name ? <div style={{'margin-top' : '5px', 'color' : '#e53e3e'}}>{formik.errors.name}</div> : null}\n//             <label htmlFor=\"email\">Ваша почта</label>\n//             <input\n//                 id=\"email\"\n//                 name=\"email\"\n//                 type=\"email\"\n//                 value={formik.values.email}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}\n//             />\n//             {formik.errors.email && formik.touched.email ? <div style={{'margin-top' : '8px', 'color' : '#e53e3e'}}>{formik.errors.email}</div> : null}\n//             <label htmlFor=\"amount\">Количество</label>\n//             <input\n//                 id=\"amount\"\n//                 name=\"amount\"\n//                 type=\"number\"\n//                 value={formik.values.amount}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}\n//             />\n//             {formik.errors.amount && formik.touched.amount ? <div style={{'margin-top' : '8px', 'color' : '#e53e3e'}}>{formik.errors.amount}</div> : null}\n//             <label htmlFor=\"currency\">Валюта</label>\n//             <select\n//                 id=\"currency\"\n//                 name=\"currency\"\n//                 value={formik.values.currency}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}>\n//                     <option value=\"\">Выберите валюту</option>\n//                     <option value=\"USD\">USD</option>\n//                     <option value=\"UAH\">UAH</option>\n//                     <option value=\"RUB\">RUB</option>\n//             </select>\n//             {formik.errors.currency && formik.touched.currency ? <div style={{'margin-top' : '8px', 'color' : '#e53e3e'}}>{formik.errors.currency}</div> : null}\n//             <label htmlFor=\"text\">Ваше сообщение</label>\n//             <textarea \n//                 id=\"text\"\n//                 name=\"text\"\n//                 value={formik.values.text}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}\n//             />\n//             {formik.errors.text && formik.touched.text ? <div style={{'margin-top' : '8px', 'color' : '#e53e3e'}}>{formik.errors.text}</div> : null}\n//             <label className=\"checkbox\">\n//                 <input \n//                     name=\"terms\" \n//                     type=\"checkbox\" \n//                     value={formik.values.terms}\n//                     onChange={formik.handleChange}\n//                     onBlur={formik.handleBlur}/>\n//                 Соглашаетесь с политикой конфиденциальности?\n//             </label>\n//             {formik.errors.terms && formik.touched.terms ? <div className='error'>{formik.errors.terms}</div> : null}\n//             <button type=\"submit\">Отправить</button>\n//         </form>\n//     )\n// }\n\n// export default CustomForm;\nvar _c;\n$RefreshReg$(_c, \"CustomForm\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","useField","Yup","myTextInput","label","props","name","CustomForm","email","amount","currency","text","terms","object","string","min","max","required","number","boolean","oneOf","values","console","log","JSON","stringify"],"sources":["C:/Users/PC/my-app/src/components/forms/Form.js"],"sourcesContent":["import {Formik, Form, Field, ErrorMessage, useField} from 'formik';\nimport * as Yup from 'yup';\n\nconst myTextInput = ({label, ...props}) => {\n\n    return (\n        <>\n            <label htmlFor={props.name}>Ваше имя</label>\n        </>\n    )\n}\n\nconst CustomForm = () => {\n    return (\n        <Formik\n            initialValues = {{\n                name: '',\n                email: '',\n                amount: 0,\n                currency: '',\n                text: '',\n                terms: false\n            }}\n            validationSchema = {Yup.object({\n                name: Yup.string()\n                         .min(2, 'Минимум 2 символа для заполнения!')\n                         .max(20, 'Максимум 20 символов для заполнения!')\n                         .required('Обязательное поле!'),\n                email: Yup.string()\n                         .email('Неправильный email адрес!')\n                         .required('Обязательное поле!'),\n                amount: Yup.number()\n                         .min(5, 'Не менее 5')\n                         .required('Обязательное поле!'),\n                currency: Yup.string().required('Выберите валюту'),\n                text: Yup.string()\n                         .min(10, 'Не менее 10 символов'),\n                terms: Yup.boolean()\n                         .required('Необходимо согласие!')\n                         .oneOf([true], 'Необходимо согласие!'),\n            })}\n            onSubmit = {values => console.log(JSON.stringify(values, null, 2))}\n        >\n            <Form className=\"form\">\n                <h2>Отправить пожертвование</h2>\n                <label htmlFor=\"name\">Ваше имя</label>\n                <Field\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                />\n                <ErrorMessage className='error' name='name' component='div'/>\n                <label htmlFor=\"email\">Ваша почта</label>\n                <Field\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                />\n                <ErrorMessage className='error' name='email' component='div'/>\n                <label htmlFor=\"amount\">Количество</label>\n                <Field\n                    id=\"amount\"\n                    name=\"amount\"\n                    type=\"number\"\n                />\n                <ErrorMessage className='error' name='amount' component='div'/>\n                <label htmlFor=\"currency\">Валюта</label>\n                <Field\n                    id=\"currency\"\n                    name=\"currency\"\n                    as=\"select\"\n                >\n                    <option value=\"\">Выберите валюту</option>\n                    <option value=\"USD\">USD</option>\n                    <option value=\"UAH\">UAH</option>\n                    <option value=\"RUB\">RUB</option>\n                </Field>\n                <ErrorMessage className='error' name='currency' component='div'/>\n                <label htmlFor=\"text\">Ваше сообщение</label>\n                <Field \n                    id=\"text\"\n                    name=\"text\"\n                    as=\"textarea\"\n                />\n                <ErrorMessage className='error' name='text' component='div'/>\n                <label className=\"checkbox\">\n                    <Field \n                        name=\"terms\" \n                        type=\"checkbox\" \n                        />\n                    Соглашаетесь с политикой конфиденциальности?\n                </label>\n                <ErrorMessage className='error' name='terms' component='div'/>\n                <button type=\"submit\">Отправить</button>\n            </Form>\n        </Formik>\n    )\n}\n\nexport default CustomForm;\n\n\n// import {useFormik} from 'formik';\n// import * as Yup from 'yup';\n\n// // const validate = values => {\n// //     const errors = {};\n\n// //     if (!values.name) {\n// //         errors.name = 'Обязательное поле!';\n// //     } else if (values.name.length < 2) {\n// //         errors.name = 'Минимум 2 символа для заполнения!';\n// //     } else if (values.name.length > 21) {\n// //         errors.name = 'Максимум 20 символов для заполнения!';\n// //     }\n\n// //     if (!values.email) {\n// //         errors.email = 'Обязательное поле!';\n// //     } else if ( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n// //         errors.email = 'Неправильный email адрес';\n// //     }\n\n// //     return errors;\n// // }\n\n// const CustomForm = () => {\n//     const formik = useFormik({\n//         initialValues: { \n//             name: '',\n//             email: '',\n//             amount: 0,\n//             currency: '',\n//             text: '',\n//             terms: false\n//         },\n//         validationSchema: Yup.object({\n//             name: Yup.string()\n//                      .min(2, 'Минимум 2 символа для заполнения!')\n//                      .max(20, 'Максимум 20 символов для заполнения!')\n//                      .required('Обязательное поле!'),\n//             email: Yup.string()\n//                      .email('Неправильный email адрес!')\n//                      .required('Обязательное поле!'),\n//             amount: Yup.number()\n//                      .min(5, 'Не менее 5')\n//                      .required('Обязательное поле!'),\n//             currency: Yup.string().required('Выберите валюту'),\n//             text: Yup.string()\n//                      .min(10, 'Не менее 10 символов'),\n//             terms: Yup.boolean()\n//                      .required('Необходимо согласие!')\n//                      .oneOf([true], 'Необходимо согласие!'),\n//         }),\n//         onSubmit: values => console.log(JSON.stringify(values, null, 2))\n//     })\n//     return (\n//         <form className=\"form\" onSubmit={formik.handleSubmit}>\n//             <h2>Отправить пожертвование</h2>\n//             <label htmlFor=\"name\">Ваше имя</label>\n//             <input\n//                 id=\"name\"\n//                 name=\"name\"\n//                 type=\"text\"\n//                 value={formik.values.name}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}\n//             />\n//             {formik.errors.name && formik.touched.name ? <div style={{'margin-top' : '5px', 'color' : '#e53e3e'}}>{formik.errors.name}</div> : null}\n//             <label htmlFor=\"email\">Ваша почта</label>\n//             <input\n//                 id=\"email\"\n//                 name=\"email\"\n//                 type=\"email\"\n//                 value={formik.values.email}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}\n//             />\n//             {formik.errors.email && formik.touched.email ? <div style={{'margin-top' : '8px', 'color' : '#e53e3e'}}>{formik.errors.email}</div> : null}\n//             <label htmlFor=\"amount\">Количество</label>\n//             <input\n//                 id=\"amount\"\n//                 name=\"amount\"\n//                 type=\"number\"\n//                 value={formik.values.amount}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}\n//             />\n//             {formik.errors.amount && formik.touched.amount ? <div style={{'margin-top' : '8px', 'color' : '#e53e3e'}}>{formik.errors.amount}</div> : null}\n//             <label htmlFor=\"currency\">Валюта</label>\n//             <select\n//                 id=\"currency\"\n//                 name=\"currency\"\n//                 value={formik.values.currency}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}>\n//                     <option value=\"\">Выберите валюту</option>\n//                     <option value=\"USD\">USD</option>\n//                     <option value=\"UAH\">UAH</option>\n//                     <option value=\"RUB\">RUB</option>\n//             </select>\n//             {formik.errors.currency && formik.touched.currency ? <div style={{'margin-top' : '8px', 'color' : '#e53e3e'}}>{formik.errors.currency}</div> : null}\n//             <label htmlFor=\"text\">Ваше сообщение</label>\n//             <textarea \n//                 id=\"text\"\n//                 name=\"text\"\n//                 value={formik.values.text}\n//                 onChange={formik.handleChange}\n//                 onBlur={formik.handleBlur}\n//             />\n//             {formik.errors.text && formik.touched.text ? <div style={{'margin-top' : '8px', 'color' : '#e53e3e'}}>{formik.errors.text}</div> : null}\n//             <label className=\"checkbox\">\n//                 <input \n//                     name=\"terms\" \n//                     type=\"checkbox\" \n//                     value={formik.values.terms}\n//                     onChange={formik.handleChange}\n//                     onBlur={formik.handleBlur}/>\n//                 Соглашаетесь с политикой конфиденциальности?\n//             </label>\n//             {formik.errors.terms && formik.touched.terms ? <div className='error'>{formik.errors.terms}</div> : null}\n//             <button type=\"submit\">Отправить</button>\n//         </form>\n//     )\n// }\n\n// export default CustomForm;"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}