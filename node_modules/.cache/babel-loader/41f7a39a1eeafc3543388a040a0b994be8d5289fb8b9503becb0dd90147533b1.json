{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      'Content-Type': 'application/json'\n    };\n    setLoading(true);\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status:  ${response.status}`);\n      }\n      const data = await response.json();\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  const clearError = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n_s(useHttp, \"wBqGcGl6EafFNGt940fH8x5vtvA=\");","map":{"version":3,"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","response","fetch","ok","Error","status","data","json","e","message","clearError"],"sources":["C:/Users/PC/my-app/src/hooks/http.hook.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type' : 'application/json'}) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status:  ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n    \r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError};\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,OAAO,GAAGN,WAAW,CAAC,gBAAOO,GAAG,EAAmF;IAAA,IAAjFC,MAAM,uEAAG,KAAK;IAAA,IAAEC,IAAI,uEAAG,IAAI;IAAA,IAAEC,OAAO,uEAAG;MAAC,cAAc,EAAG;IAAkB,CAAC;IAChHP,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;QAACC,MAAM;QAAEC,IAAI;QAAEC;MAAO,CAAC,CAAC;MAE1D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,mBAAkBP,GAAI,cAAaI,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC1E;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAClCd,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOa,IAAI;IACf,CAAC,CAAC,OAAME,CAAC,EAAE;MACPf,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAACa,CAAC,CAACC,OAAO,CAAC;MACnB,MAAMD,CAAC;IACX;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAGpB,WAAW,CAAC,MAAMK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;EAExD,OAAO;IAACH,OAAO;IAAEI,OAAO;IAAEF,KAAK;IAAEgB;EAAU,CAAC;AAChD,CAAC;AAAC,GA3BWnB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}