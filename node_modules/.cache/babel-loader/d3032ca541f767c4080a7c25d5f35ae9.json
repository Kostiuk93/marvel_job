{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\my-app\\\\src\\\\components\\\\randomChar\\\\RandomChar.js\";\nimport { Component } from 'react/cjs/react.production.min';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomChar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      char: {},\n      loading: true,\n      // идет загрузка данных в char, то loading true\n      error: false //изначально false, так как изначально нет никакой ошибки\n\n    };\n    this.marvelService = new MarvelService();\n\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false\n      }); // как только загрузка данных закончилась в char, то loading снановится false\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n\n    this.updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.marvelService.getCharacter(id).then(this.onCharLoaded).catch(this.onError);\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar(); // this.timerId = setInterval(this.updateChar, 5000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 47\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__static\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 52\n          }, this), \"Do you want to get to know him better?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: \"Or choose another one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button__main\",\n          onClick: this.updateChar,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"try it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mjolnir,\n          alt: \"mjolnir\",\n          className: \"randomchar__decoration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = char;\n  _noImg = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      style: {\n        objectFit: 'contain'\n      },\n      alt: \"Random character\",\n      className: \"randomchar__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_c = View;\nexport default RandomChar;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/Users/PC/my-app/src/components/randomChar/RandomChar.js"],"names":["Component","Spinner","ErrorMessage","MarvelService","mjolnir","RandomChar","constructor","props","state","char","loading","error","marvelService","onCharLoaded","setState","onError","updateChar","id","Math","floor","random","getCharacter","then","catch","componentDidMount","componentWillUnmount","clearInterval","timerId","render","errorMessage","spinner","content","View","name","description","thumbnail","homepage","wiki","_noImg","objectFit"],"mappings":";AAAA,SAASA,SAAT,QAA0B,gCAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAGA,OAAO,mBAAP;AACA,OAAOC,OAAP,MAAoB,iCAApB;;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAInBC,KAJmB,GAIX;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,OAAO,EAAE,IAFL;AAEW;AACfC,MAAAA,KAAK,EAAE,KAHH,CAGS;;AAHT,KAJW;AAAA,SAUnBC,aAVmB,GAUH,IAAIT,aAAJ,EAVG;;AAAA,SAqBnBU,YArBmB,GAqBHJ,IAAD,IAAU;AACrB,WAAKK,QAAL,CAAc;AACVL,QAAAA,IADU;AAEVC,QAAAA,OAAO,EAAE;AAFC,OAAd,EADqB,CAGA;AACxB,KAzBkB;;AAAA,SA2BnBK,OA3BmB,GA2BT,MAAM;AACZ,WAAKD,QAAL,CAAc;AACVJ,QAAAA,OAAO,EAAE,KADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIH,KAhCkB;;AAAA,SAkCnBK,UAlCmB,GAkCN,MAAM;AACf,YAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,UAAU,OAA3B,IAAsC,OAAjD,CAAX;AACA,WAAKR,aAAL,CACKS,YADL,CACkBJ,EADlB,EAEKK,IAFL,CAEU,KAAKT,YAFf,EAGKU,KAHL,CAGW,KAAKR,OAHhB;AAIH,KAxCkB;AAElB;;AAUDS,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,UAAL,GADgB,CAEhB;AACH;;AAEDS,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKC,OAAN,CAAb;AACH;;AAuBDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACnB,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA;AAAhB,QAAyB,KAAKH,KAApC;AACA,UAAMqB,YAAY,GAAGlB,KAAK,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAqB,IAA/C;AACA,UAAMmB,OAAO,GAAGpB,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAgB,IAAvC;AACA,UAAMqB,OAAO,GAAG,EAAErB,OAAO,IAAIC,KAAb,iBAAsB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAtB,GAA4C,IAA5D;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACKoB,YADL,EAEKC,OAFL,EAGKC,OAHL,eAII;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA,iEAC+B;AAAA;AAAA;AAAA;AAAA,kBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AACI,UAAA,SAAS,EAAC,qBADd;AAEI,UAAA,OAAO,EAAE,KAAKf,UAFlB;AAAA,iCAII;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAcI;AAAK,UAAA,GAAG,EAAEZ,OAAV;AAAmB,UAAA,GAAG,EAAC,SAAvB;AAAiC,UAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AAxE8B;;AA2EnC,MAAM4B,IAAI,GAAG,CAAC;AAACvB,EAAAA;AAAD,CAAD,KAAY;AACrB,QAAM;AAACwB,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA,QAA/B;AAAyCC,IAAAA;AAAzC,MAAiD5B,IAAvD;AACA6B,EAAAA,MAAM,GAAG,qEAAT;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEH,SAAV;AAAqB,MAAA,KAAK,EAAE;AAACI,QAAAA,SAAS,EAAC;AAAX,OAA5B;AAAmD,MAAA,GAAG,EAAC,kBAAvD;AAA0E,MAAA,SAAS,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA,kBAAiCN;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,kBACKC;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAG,UAAA,IAAI,EAAEE,QAAT;AAAmB,UAAA,SAAS,EAAC,qBAA7B;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAG,UAAA,IAAI,EAAEC,IAAT;AAAe,UAAA,SAAS,EAAC,0BAAzB;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAtBD;;KAAML,I;AAuBN,eAAe3B,UAAf","sourcesContent":["import { Component } from 'react/cjs/react.production.min';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    state = {\n        char: {},\n        loading: true, // идет загрузка данных в char, то loading true\n        error: false //изначально false, так как изначально нет никакой ошибки\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar()\n        // this.timerId = setInterval(this.updateChar, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false}) // как только загрузка данных закончилась в char, то loading снановится false\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null \n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error) ? <View char={char}/> : null\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button \n                        className=\"button button__main\"\n                        onClick={this.updateChar}\n                        >\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char\n    _noImg = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} style={{objectFit:'contain'}} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n} \nexport default RandomChar;"]},"metadata":{},"sourceType":"module"}